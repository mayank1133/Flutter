import 'package:flutter/material.dart';

class AddUser extends StatefulWidget {
  final Function(Map<String, dynamic>) onAddUser;

  const AddUser({super.key, required this.onAddUser});

  @override
  State<AddUser> createState() => _AddUserState();
}

class _AddUserState extends State<AddUser> {
  final TextEditingController _nameController = TextEditingController();
  final TextEditingController _emailController = TextEditingController();
  final TextEditingController _mobileController = TextEditingController();
  final TextEditingController _dobController = TextEditingController();
  final TextEditingController _cityController = TextEditingController();
  final TextEditingController _hobbiesController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();
  final TextEditingController _confirmPasswordController = TextEditingController();

  String _selectedGender = "Male";
  bool _isFavorite = false;
  bool _isPasswordVisible = false;
  bool _isConfirmPasswordVisible = false;

  void _pickDate() async {
    DateTime? pickedDate = await showDatePicker(
      context: context,
      initialDate: DateTime(2000, 1, 1),
      firstDate: DateTime(1960),
      lastDate: DateTime.now(),
    );

    if (pickedDate != null) {
      setState(() {
        _dobController.text = "${pickedDate.day}/${pickedDate.month}/${pickedDate.year}";
      });
    }
  }

  void _submitUser() {
    if (_nameController.text.isEmpty ||
        _emailController.text.isEmpty ||
        _mobileController.text.isEmpty ||
        _dobController.text.isEmpty ||
        _cityController.text.isEmpty ||
        _passwordController.text.isEmpty ||
        _confirmPasswordController.text.isEmpty ||
        _passwordController.text != _confirmPasswordController.text) {
      return;
    }

    widget.onAddUser({
      'name': _nameController.text,
      'email': _emailController.text,
      'mobile': _mobileController.text,
      'dob': _dobController.text,
      'city': _cityController.text,
      'gender': _selectedGender,
      'hobbies': _hobbiesController.text,
      'isFavorite': _isFavorite,
    });

    Navigator.of(context).pop();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Create Your Profile üíï"),
        backgroundColor: Colors.pinkAccent,
        foregroundColor: Colors.white,
        elevation: 0,
      ),
      body: Container(
        decoration: BoxDecoration(
          gradient: LinearGradient(
            colors: [Colors.pink.shade100, Colors.white],
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
          ),
        ),
        child: SingleChildScrollView(
          padding: const EdgeInsets.all(20),
          child: Column(
            children: [
              const CircleAvatar(
                radius: 50,
                backgroundColor: Colors.white,
                child: Icon(Icons.person, size: 60, color: Colors.pinkAccent),
              ),
              const SizedBox(height: 10),
              const Text(
                "Find Your Perfect Match ‚ù§Ô∏è",
                style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold, color: Colors.pinkAccent),
              ),
              const SizedBox(height: 20),

              _buildTextField(_nameController, "Full Name", Icons.person),
              _buildTextField(_emailController, "Email Address", Icons.email, TextInputType.emailAddress),
              _buildTextField(_mobileController, "Mobile Number", Icons.phone, TextInputType.phone),

              TextField(
                controller: _dobController,
                decoration: InputDecoration(
                  labelText: 'Date of Birth',
                  prefixIcon: const Icon(Icons.calendar_today, color: Colors.pinkAccent),
                  filled: true,
                  fillColor: Colors.white,
                  border: OutlineInputBorder(borderRadius: BorderRadius.circular(30)),
                ),
                readOnly: true,
                onTap: _pickDate,
              ),
              const SizedBox(height: 15),

              _buildTextField(_cityController, "City", Icons.location_city),
              _buildGenderSelection(),
              _buildTextField(_hobbiesController, "Hobbies (e.g., Music, Traveling)", Icons.favorite),

              _buildPasswordField(_passwordController, "Password"),
              _buildPasswordField(_confirmPasswordController, "Confirm Password"),

              const SizedBox(height: 20),
              ElevatedButton(
                onPressed: _submitUser,
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.pinkAccent,
                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(30)),
                  padding: const EdgeInsets.symmetric(horizontal: 50, vertical: 15),
                ),
                child: const Text("Create Profile", style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildTextField(TextEditingController controller, String label, IconData icon, [TextInputType keyboardType = TextInputType.text]) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8),
      child: TextField(
        controller: controller,
        keyboardType: keyboardType,
        decoration: InputDecoration(
          labelText: label,
          prefixIcon: Icon(icon, color: Colors.pinkAccent),
          filled: true,
          fillColor: Colors.white,
          border: OutlineInputBorder(borderRadius: BorderRadius.circular(30)),
        ),
      ),
    );
  }

  Widget _buildGenderSelection() {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceAround,
        children: ["Male", "Female", "Other"].map((gender) {
          return ChoiceChip(
            label: Text(gender, style: TextStyle(color: _selectedGender == gender ? Colors.white : Colors.pinkAccent)),
            selected: _selectedGender == gender,
            selectedColor: Colors.pinkAccent,
            onSelected: (isSelected) {
              if (isSelected) {
                setState(() {
                  _selectedGender = gender;
                });
              }
            },
          );
        }).toList(),
      ),
    );
  }

  Widget _buildPasswordField(TextEditingController controller, String label) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8),
      child: TextField(
        controller: controller,
        obscureText: label == "Password" ? !_isPasswordVisible : !_isConfirmPasswordVisible,
        decoration: InputDecoration(
          labelText: label,
          prefixIcon: const Icon(Icons.lock, color: Colors.pinkAccent),
          filled: true,
          fillColor: Colors.white,
          border: OutlineInputBorder(borderRadius: BorderRadius.circular(30)),
          suffixIcon: IconButton(
            icon: Icon(
              label == "Password" 
                  ? (_isPasswordVisible ? Icons.visibility : Icons.visibility_off)
                  : (_isConfirmPasswordVisible ? Icons.visibility : Icons.visibility_off),
              color: Colors.pinkAccent,
            ),
            onPressed: () {
              setState(() {
                if (label == "Password") {
                  _isPasswordVisible = !_isPasswordVisible;
                } else {
                  _isConfirmPasswordVisible = !_isConfirmPasswordVisible;
                }
              });
            },
          ),
        ),
      ),
    );
  }
}
